map : association between key value pairs 

a := map[string]int { // this means key has to be 'string' and value has to be of 'int' type 
    "a" :1,
    "b" :2
} 
For just declaration use the following
a:= make(map[string]int)
we can add the key value pairs later

To access : a[key]
To add or update : a[key]=<new_value>
To delete : delete(a,key)
After you update, the order of the elements might change

If we try to access elements that are not there in the map , it will return the default value i.e for int , it is 0
This is where we can use the "comma ok" syntax. 
example :
b, ok = a[key]

if "ok" is true then it is there in the map and "b" will be populated with the value. if it is false then b is populated with default value
meaning that it is not there in the map

MAPS ARE PASSED BY REFERENCE